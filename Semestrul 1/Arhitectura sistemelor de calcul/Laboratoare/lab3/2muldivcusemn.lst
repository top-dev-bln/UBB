     1                                  bits 32
     2                                  
     3                                  global start        
     4                                  
     5                                  
     6                                  extern exit
     7                                  import exit msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10                                  
    11 00000000 02                       a db 2
    12 00000001 02                       b db 2
    13 00000002 04                       c db 4
    14 00000003 07000000                 d dd 7
    15 00000007 0600000000000000         e dq 6
    16                                   
    17                                  
    18                                  segment code use32 class=code
    19                                      start:
    20                                      ;   2/(a+b*c-9)+e-d
    21 00000000 A0[01000000]                mov al, [b]
    22 00000005 F625[02000000]              mul byte [c] ; AX = b*c
    23 0000000B 6689C3                      mov BX, AX   ; BX = b*c
    24                                      
    25 0000000E A0[00000000]                mov al, [a]
    26 00000013 6698                        cbw
    27                                      
    28 00000015 6601C3                      add bx,ax
    29                                      
    30 00000018 6683EB09                    sub bx, 9 ; bx = (a+b*c-9)
    31                                      
    32                                      
    33                                      
    34                                      
    35 0000001C B802000000                  mov eax, 2
    36 00000021 66BA0000                    mov dx,0
    37 00000025 66F7FB                      idiv bx ; ax = 2 / paranteza
    38                                      
    39                                  
    40                                      
    41 00000028 BA00000000                  mov edx,0
    42 0000002D 0305[07000000]              add eax, [e]
    43 00000033 1315[0B000000]              adc edx, [e+4]
    44                                      
    45 00000039 2B05[03000000]              sub eax, [d]
    46 0000003F 83DA00                      sbb edx , 0
    47                                      
    48                                      
    49                                      
    50                                      
    51                                  
    52 00000042 6A00                            push    dword 0
    53 00000044 FF15[00000000]                  call    [exit] 
