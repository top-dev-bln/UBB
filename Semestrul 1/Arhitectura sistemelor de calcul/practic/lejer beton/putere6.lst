     1                                  bits 32
     2                                  global start        
     3                                  
     4                                  extern exit,fopen,fread,fclose, printf
     5                                  import exit msvcrt.dll
     6                                  import fopen msvcrt.dll
     7                                  import fread msvcrt.dll
     8                                  import fclose msvcrt.dll
     9                                  import printf msvcrt.dll
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 74657874756C2E7478-         nume_fisier db "textul.txt",0
    13 00000009 7400               
    14 0000000B 7200                        mod_acces db "r",0
    15 0000000D 00<rept>                    cifre times 10 db 0
    16                                      
    17                                      
    18                                      
    19 00000017 FFFFFFFF                    descriptor dd -1
    20                                      len equ 100
    21 0000001B 00<rept>                    text times len db 0
    22                                      
    23 0000007F 256420617061726520-         format db "%d apare de %d ori",0    
    23 00000088 6465202564206F7269-
    23 00000091 00                 
    24                                      
    25                                  
    26                                  
    27                                  segment code use32 class=code
    28                                      start:
    29                                      
    30 00000000 68[0B000000]                    push dword mod_acces
    31 00000005 68[00000000]                    push dword nume_fisier
    32 0000000A FF15[00000000]                  call [fopen]
    33 00000010 83C408                          add esp,4*2
    34                                          
    35 00000013 A3[17000000]                    mov [descriptor], eax
    36                                          
    37 00000018 83F800                          cmp eax,0
    38 0000001B 747C                            je final
    39                                          
    40 0000001D FF35[17000000]                  push dword [descriptor]
    41 00000023 6A64                            push dword len
    42 00000025 6A01                            push dword 1
    43 00000027 68[1B000000]                    push dword text
    44 0000002C FF15[00000000]                  call [fread]
    45 00000032 83C410                          add esp, 4*4
    46                                          
    47 00000035 BE[1B000000]                    mov esi , dword text
    48                                          
    49                                          
    50 0000003A 89C1                            mov ecx,eax
    51 0000003C BB00000000                      mov ebx,0
    52 00000041 E356                            jecxz final
    53                                          
    54                                          next_car:
    55                                          
    56 00000043 B800000000                          mov eax,0
    57 00000048 AC                                  lodsb;al caracter din text
    58                                              
    59                                              
    60                                  
    61 00000049 2C30                                sub al,'0'
    62                                              
    63 0000004B 3C09                                cmp al, 9
    64 0000004D 7709                                ja continua
    65                                              
    66 0000004F BF[0D000000]                        mov edi, cifre
    67 00000054 01C7                                add edi, eax
    68                                              
    69                                  
    70 00000056 FE07                                inc byte [edi]
    71                                              
    72                                  
    73                                           
    74                                              continua:
    75                                              
    76 00000058 E2E9                            loop next_car
    77                                          
    78                                          
    79                                          ;acum ca avem vector de frecventa trecem prin el sa cautam maximul
    80 0000005A BB00000000                      mov ebx,0
    81 0000005F BA00000000                      mov edx,0
    82                                  
    83 00000064 BE[0D000000]                    mov esi, cifre
    84 00000069 B90A000000                      mov ecx,10
    85                                          
    86                                          passing:
    87                                          
    88 0000006E AC                              lodsb; in al avem
    89 0000006F 38D8                            cmp al,bl
    90 00000071 7606                            jbe skip
    91 00000073 88C3                            mov bl,al
    92 00000075 B20A                            mov dl,10
    93 00000077 28CA                            sub dl,cl
    94                                          
    95                                          
    96                                          
    97                                          skip:
    98 00000079 E2F3                            loop passing
    99                                          
   100                                       
   101                                          
   102                                          
   103                                          
   104                                          
   105                                          
   106                                          
   107                                          
   108                                          
   109                                          
   110                                          
   111                                          
   112                                          
   113                                          
   114                                          
   115 0000007B 60                              pushad
   116                                          
   117                                          
   118 0000007C FF35[17000000]                  push dword [descriptor]
   119 00000082 FF15[00000000]                  call [fclose]
   120 00000088 83C404                          add esp,4
   121                                          
   122                                          
   123                                          
   124 0000008B 61                              popad
   125 0000008C 53                              push ebx
   126 0000008D 52                              push edx
   127 0000008E 68[7F000000]                    push dword format
   128 00000093 FF15[00000000]                  call [printf]
   129                                      
   130                                          final:
   131                                          
   132                                  
   133                                  
   134 00000099 6A00                            push    dword 0
   135 0000009B FF15[00000000]                  call    [exit]
