     1                                  bits 32
     2                                  global start
     3                                  
     4                                  
     5                                  extern exit, scanf,printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13                                      
    14 00000000 256400                      form db "%d",0
    15                                      
    16 00000003 257800                      format db "%x",0
    17                                  
    18                                      
    19 00000006 00000000                    a dd 0
    20 0000000A 00000000                    b dd 0
    21 0000000E 11000000                    k dd 17
    22                                  
    23                                  
    24                                  segment code use32 class=code
    25                                  
    26                                      start:
    27                                      
    28 00000000 68[06000000]                    push dword a
    29 00000005 68[00000000]                    push dword form
    30 0000000A FF15[00000000]                  call [scanf]
    31 00000010 83C408                          add esp ,4*2
    32                                          
    33 00000013 68[0A000000]                    push dword b
    34 00000018 68[00000000]                    push dword form
    35 0000001D FF15[00000000]                  call [scanf]
    36 00000023 83C408                          add esp ,4*2
    37                                          
    38 00000026 A1[06000000]                    mov eax, [a] 
    39 0000002B 2B05[0A000000]                  sub eax, [b]
    40                                          
    41 00000031 8B1D[0E000000]                  mov ebx, [k]
    42 00000037 F7E3                            mul ebx
    43                                          ; eax = (a-b)*k  fiindca avem numere mici nu trecem pe edx
    44                                  
    45                                          
    46                                          
    47 00000039 50                              push  eax
    48 0000003A 68[03000000]                    push format
    49 0000003F FF15[00000000]                  call [printf]
    50 00000045 83C408                          add esp, 4*2
    51                                             
    52                                        
    53                                          
    54                                    
    55 00000048 6A00                            push    dword 0
    56 0000004A FF15[00000000]                  call    [exit]
    57                                          
    58                                          
