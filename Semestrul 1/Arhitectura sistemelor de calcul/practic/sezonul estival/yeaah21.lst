     1                                  bits 32
     2                                  global start
     3                                  
     4                                  
     5                                  extern exit, scanf,printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 257800                      format db "%x",0
    14 00000003 256400                      form db "%d",0
    15                                  
    16                                      
    17 00000006 00000000                    a dd 0
    18 0000000A 00000000                    b dd 0
    19 0000000E 00000000                    c dd 0
    20                                  
    21                                  
    22                                  segment code use32 class=code
    23                                  
    24                                      start:
    25                                      
    26 00000000 68[06000000]                    push dword a
    27 00000005 68[03000000]                    push dword form
    28 0000000A FF15[00000000]                  call [scanf]
    29 00000010 83C408                          add esp ,4*2
    30                                          
    31 00000013 68[0A000000]                    push dword b
    32 00000018 68[03000000]                    push dword form
    33 0000001D FF15[00000000]                  call [scanf]
    34 00000023 83C408                          add esp ,4*2
    35                                          
    36 00000026 A1[06000000]                    mov eax, [a] ; ax - wordul
    37 0000002B 8B1D[0A000000]                  mov ebx, [b] ; bx - wordul
    38                                          
    39 00000031 2B05[0A000000]                  sub eax, [b] ; ax = a-b
    40 00000037 031D[06000000]                  add ebx, [a] ; bx = a+b
    41                                          
    42 0000003D 66891D[0E000000]                mov [c], bx
    43 00000044 66A3[10000000]                  mov [c+2], ax
    44                                          
    45                                          
    46                                          
    47 0000004A FF35[0E000000]                  push dword [c]
    48 00000050 68[00000000]                    push dword format
    49 00000055 FF15[00000000]                  call [printf]
    50 0000005B 83C408                          add esp, 4*2
    51                                          
    52                                    
    53 0000005E 6A00                            push    dword 0
    54 00000060 FF15[00000000]                  call    [exit]
    55                                          
    56                                          
