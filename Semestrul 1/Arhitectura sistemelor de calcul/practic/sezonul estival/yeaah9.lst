     1                                  bits 32
     2                                  global start        
     3                                  
     4                                  extern exit, scanf, printf
     5                                  import exit msvcrt.dll
     6                                  import scanf msvcrt.dll
     7                                  import printf msvcrt.dll
     8                                  
     9                                  segment data use32 class=data
    10 00000000 00000000                    rezultat dd 0
    11 00000004 256400                      format db "%d",0
    12 00000007 00000000                    a dd 0 
    13 0000000B 00000000                    b dd 0
    14                                      
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                      
    19 00000000 68[07000000]                    push dword a
    20 00000005 68[04000000]                    push format
    21 0000000A FF15[00000000]                  call [scanf]
    22 00000010 83C404                          add esp, 4*1
    23                                          
    24 00000013 68[0B000000]                    push dword b
    25 00000018 68[04000000]                    push format
    26 0000001D FF15[00000000]                  call [scanf]
    27 00000023 83C404                          add esp, 4*1
    28                                          
    29 00000026 A1[07000000]                    mov eax, [a]
    30 0000002B 8B1D[07000000]                  mov ebx, [a]
    31 00000031 0305[0B000000]                  add eax, [b]
    32 00000037 2B1D[0B000000]                  sub ebx, [b]
    33                                          
    34 0000003D 99                              cdq
    35 0000003E F7FB                            idiv ebx
    36                                          
    37 00000040 A3[00000000]                    mov [rezultat] ,eax
    38                                          
    39                                          
    40                                          
    41                                          
    42                                          
    43                                          
    44                                          
    45                                          
    46 00000045 50                              push eax
    47 00000046 68[04000000]                    push format
    48 0000004B FF15[00000000]                  call [printf]
    49 00000051 83C408                          add esp, 4*2
    50                                      
    51                                      
    52                                      
    53                                  
    54                                  
    55 00000054 6A00                            push    dword 0
    56 00000056 FF15[00000000]                  call    [exit]
