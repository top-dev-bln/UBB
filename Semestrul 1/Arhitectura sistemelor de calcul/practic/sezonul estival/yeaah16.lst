     1                                  bits 32
     2                                  global start
     3                                  
     4                                  
     5                                  extern exit, scanf,printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 00000000                    a dd 0
    14 00000004 00000000                    b dd 0
    15 00000008 257800                      mesaj db "%x",0
    16 0000000B 256400                      format db "%d",0
    17                                  
    18                                  segment code use32 class=code
    19                                  
    20                                      start:
    21                                      
    22 00000000 68[00000000]                    push dword a
    23 00000005 68[0B000000]                    push dword format
    24 0000000A FF15[00000000]                  call [scanf]
    25 00000010 83C408                          add esp ,4*2
    26                                          
    27 00000013 68[04000000]                    push dword b
    28 00000018 68[0B000000]                    push dword format
    29 0000001D FF15[00000000]                  call [scanf]
    30 00000023 83C408                          add esp, 4*2
    31                                          
    32 00000026 A1[00000000]                    mov eax, [a]
    33 0000002B 8B1D[04000000]                  mov ebx, [b]
    34                                          
    35 00000031 01D8                            add eax,ebx 
    36                                          
    37                                          ; eax = a+b
    38 00000033 50                              push eax
    39 00000034 6658                            pop ax
    40 00000036 665A                            pop dx
    41                                          
    42 00000038 66BB0200                        mov bx, 2
    43 0000003C 66F7FB                          idiv bx
    44                                          
    45                                          ;ax = a+b/2
    46                                          
    47 0000003F 98                              cwde
    48                                          
    49                                          
    50                                          
    51 00000040 50                              push eax
    52 00000041 68[08000000]                    push mesaj
    53 00000046 FF15[00000000]                  call [printf]
    54 0000004C 83C410                          add esp, 4*4
    55                                          
    56                                      
    57 0000004F 6A00                            push    dword 0
    58 00000051 FF15[00000000]                  call    [exit]
