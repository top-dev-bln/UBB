     1                                  bits 32
     2                                  global start
     3                                  
     4                                  
     5                                  extern exit, scanf,printf
     6                                  import exit msvcrt.dll
     7                                  import scanf msvcrt.dll
     8                                  import printf msvcrt.dll
     9                                  
    10                                  
    11                                  segment data use32 class=data
    12                                  
    13 00000000 257800                      format db "%x",0
    14 00000003 73756D61203D202578-         sumna db "suma = %x",10,0
    14 0000000C 0A00               
    15 0000000E 6469666572656E7461-         diffa db "diferenta = %x",0
    15 00000017 203D20257800       
    16                                      
    17 0000001D 00000000                    a dd 0
    18 00000021 00000000                    b dd 0
    19                                  
    20                                  
    21                                  segment code use32 class=code
    22                                  
    23                                      start:
    24                                      
    25 00000000 68[1D000000]                    push dword a
    26 00000005 68[00000000]                    push dword format
    27 0000000A FF15[00000000]                  call [scanf]
    28 00000010 83C408                          add esp ,4*2
    29                                          
    30 00000013 68[21000000]                    push dword b
    31 00000018 68[00000000]                    push dword format
    32 0000001D FF15[00000000]                  call [scanf]
    33 00000023 83C408                          add esp ,4*2
    34                                          
    35 00000026 A1[1D000000]                    mov eax, [a]
    36 0000002B 8B1D[21000000]                  mov ebx, [b]
    37                                          
    38 00000031 BA00000000                      mov edx,0
    39 00000036 6689C2                          mov dx, ax
    40 00000039 6601DA                          add dx, bx
    41                                          
    42 0000003C C1E810                          shr eax, 16
    43 0000003F C1EB10                          shr ebx, 16
    44                                          
    45 00000042 B900000000                      mov ecx,0
    46 00000047 6689C1                          mov cx, ax
    47 0000004A 6629D9                          sub cx, bx
    48                                          
    49 0000004D 60                              pushad
    50 0000004E 52                              push edx
    51 0000004F 68[03000000]                    push dword sumna
    52 00000054 FF15[00000000]                  call [printf]
    53 0000005A 83C408                          add esp, 4*2
    54 0000005D 61                              popad
    55 0000005E 51                              push ecx
    56 0000005F 68[0E000000]                    push dword diffa
    57 00000064 FF15[00000000]                  call [printf]
    58 0000006A 83C408                          add esp, 4*2
    59                                          
    60                                    
    61 0000006D 6A00                            push    dword 0
    62 0000006F FF15[00000000]                  call    [exit]
    63                                          
    64                                          
